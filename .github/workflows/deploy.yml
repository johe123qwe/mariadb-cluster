name: Deploy site files

on:
  push:
    branches:
      - main # 只在master上push触发部署
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
      - README.md
      - LICENSE

jobs:
  deploy:
    runs-on: ubuntu-latest # 使用ubuntu系统镜像运行自动化脚本

    steps: # 自动化步骤
      - uses: actions/checkout@v3 # 第一步，下载代码仓库
      - name: 输出变量
        run: |
          echo "开始部署"
          echo ${{ vars.RSYNC_EXCLUDE_LIST }}

      - name: SSH 命令删除旧文件
        uses: appleboy/ssh-action@master 
        with:
          # 这里配置对应仓库设置的变量，就可以避免服务器配置暴露 
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}

          # 先用 SSH 命令删除旧文件
          script: |
            rm -rf /usr/share/nginx/docker_mariadb_cluster/*

      - name: Deploy to Server # 第二步，rsync推文件
        uses: AEnterprise/rsync-deploy@v1.0.2 # 使用别人包装好的步骤镜像
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }} # 引用配置，SSH私钥
          ARGS: -avz --delete --exclude-from=rsync.exclude # rsync参数，排除.pyc文件
          SERVER_PORT: ${{ secrets.SSH_PORT }} # SSH端口
          FOLDER: ./ # 要推送的文件夹，路径相对于代码仓库的根目录
          SERVER_IP: ${{ secrets.SSH_HOST }} # 引用配置，服务器的host名（IP或者域名domain.com）
          USERNAME: ${{ secrets.SSH_USERNAME }} # 引用配置，服务器登录名
          SERVER_DESTINATION: /usr/share/nginx/docker_mariadb_cluster # 部署到目标文件夹

      - name: 备份 # 第三步，重启服务
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }} # 下面三个配置与上一步类似
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.SSH_PORT }}
          # 重启的脚本，根据自身情况做相应改动，一般要做的是migrate数据库以及重启服务器
          script: |
            ls /usr/share/nginx/docker_mariadb_cluster
